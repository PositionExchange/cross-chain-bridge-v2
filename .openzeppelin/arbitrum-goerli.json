{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xC519c302964F0f4aaE8EE9B51Fd808F6d03E9453",
    "txHash": "0x94c521fdd6865c1a5e65e94aec8f579b93dd4ab193e26a3d3f2ce6db16f8c295"
  },
  "proxies": [
    {
      "address": "0x2C44FF01200C4F56DD30770107462Cf33FEEF3B9",
      "txHash": "0x10e77fee68236fb42f0a4c8172d9026217f44f510ec0ec4c25e5422f7641d43f",
      "kind": "transparent"
    },
    {
      "address": "0xe20059ACbe35882F9B59b7BbCEb8d49a18DC1B5D",
      "txHash": "0x5f7495d5dbc929f916b6581e1721081d3c470b87618f432715e4c3df21ef6444",
      "kind": "transparent"
    },
    {
      "address": "0xC86064a9737dC39D7bf29b0D8bdbD197e5524C13",
      "txHash": "0x504bc30a709af1168dcbfdd1383ff09ab3f4216c4b315ba5ad7a2311fb1d3f58",
      "kind": "transparent"
    },
    {
      "address": "0xA74a703EA3d891d5b069F43B00A619e9eB1eC15e",
      "txHash": "0x0f8d3d35c029ca551592952d00ed9e54ef2f547a1bdcb612ab22404b7a917d3f",
      "kind": "transparent"
    },
    {
      "address": "0x892ED343f3BFF7C69222011d6e29D130B8d35069",
      "txHash": "0x7da8b2930384e7ac12b2f2641135218b5a7e7fe02cf6a7e153bd510d9c9fd7d9",
      "kind": "transparent"
    },
    {
      "address": "0x90697D406A556b17b191513234eBE297C31fe66A",
      "txHash": "0x09921f8f3f0f79829c16b1e6c663078354a098832b7f80100155ee30b6640305",
      "kind": "transparent"
    },
    {
      "address": "0xe7011A188A8453CDF846d2C9d5D8eaF3297DBBA2",
      "txHash": "0x5ee03b32fe72baed836001b103ec73a76791d4873aed682c1a063eddbcd449fb",
      "kind": "transparent"
    },
    {
      "address": "0xf9D976A2c9ecbF664047e3f9efF9983e829E066C",
      "txHash": "0x9913ca891ce7b14a2263fa5bb0ec9050f5a1944647380328c951d533ba7a4247",
      "kind": "transparent"
    },
    {
      "address": "0x04F76D826596BE89AE7C0D477D0aB6AFB9D61269",
      "txHash": "0x27ce433a5b24d7ddb9c9ecf98e4578de8420b15ca450c1b8adce8d41ea06efc0",
      "kind": "transparent"
    },
    {
      "address": "0x89dEaFac69BE05b48DA2fD6dECeb3c923F1d713d",
      "txHash": "0xf58e39d5b13ee0de297921b9e94dc6981f8fe97aef23a08a60e7f2b36af8e068",
      "kind": "transparent"
    },
    {
      "address": "0xD5814BDe813266e56cd0680513B4f4029F57DD3b",
      "txHash": "0x5ef6234cc920cc28bfe0f00c45b55b55d67c39a5a74bdc4424c346ae8f6db4b2",
      "kind": "transparent"
    },
    {
      "address": "0x9Dc19290B7d4F9333A2bE7f8A34A5Ea9D70AaDE8",
      "txHash": "0xe298542fae857b0bcb889d8839d9853279e3d34f5f06860241a34bb0f48333de",
      "kind": "transparent"
    },
    {
      "address": "0x126e25C57eC2567368Cc1405f2662622E1e58E29",
      "txHash": "0x95878e0c09e5a3f9a99bcd482e7fdf5e9d8be8f3d65c7b44793c2ebe60e871ba",
      "kind": "transparent"
    },
    {
      "address": "0x6056ff044c1e72cbd2074bD7D5A6B0C1352a3A18",
      "txHash": "0x9a5b17b6c1902d82f0030559c78ee2da0a4c63a952ea532d7dc26680051ee0d9",
      "kind": "transparent"
    },
    {
      "address": "0xDFBfDb23B598F0F4335A98c19B5A8335ca882Ea2",
      "txHash": "0x1f682b9d93ef9936f97d89f8cb53df9334932ad0f5a22dfa35bfbde76e2f1aa2",
      "kind": "transparent"
    }
  ],
  "impls": {
    "6ec3fa2602ecc73d10a7ab57e5a24e2b2b5e11028232f8326a4110025725a4dd": {
      "address": "0x2D09C1539Ea98E70e41242A43fcc1c1593D9080f",
      "txHash": "0xbcb07d8cc59fbbac071a36a99a7b6c02d9bc60d6a76f2c7b866499f2e2cde1c3",
      "layout": {
        "solcVersion": "0.8.8",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "verifiers",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_contract(ICrossChainVerifier)5729)",
            "contract": "CbcDecVer",
            "src": "contracts/common/CbcDecVer.sol:11"
          },
          {
            "label": "remoteCrossChainControlContracts",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "CbcDecVer",
            "src": "contracts/common/CbcDecVer.sol:14"
          },
          {
            "label": "timeHorizon",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "CrossChainControl",
            "src": "contracts/CrossChainControl.sol:29"
          },
          {
            "label": "replayPrevention",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "CrossChainControl",
            "src": "contracts/CrossChainControl.sol:33"
          },
          {
            "label": "myBcId",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "CrossChainControl",
            "src": "contracts/CrossChainControl.sol:36"
          },
          {
            "label": "txIndex",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "CrossChainControl",
            "src": "contracts/CrossChainControl.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICrossChainVerifier)5729": {
            "label": "contract ICrossChainVerifier",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_contract(ICrossChainVerifier)5729)": {
            "label": "mapping(uint256 => contract ICrossChainVerifier)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b2e99d71b8ba0b0bb62f64f1fce58e15a75767c75a46c073bec346195b2f0776": {
      "address": "0x4034bd00264321D238CaDAe7594327a33066FFd6",
      "txHash": "0xf21d35d1d87afb433c73508183f14b2f93c0c7d3cf020eae3fcfb4d5b720d5e1",
      "layout": {
        "solcVersion": "0.8.8",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "verifiers",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_contract(ICrossChainVerifier)2489)",
            "contract": "CbcDecVer",
            "src": "contracts/common/CbcDecVer.sol:11"
          },
          {
            "label": "remoteCrossChainControlContracts",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "CbcDecVer",
            "src": "contracts/common/CbcDecVer.sol:14"
          },
          {
            "label": "timeHorizon",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "CrossChainControl",
            "src": "contracts/CrossChainControl.sol:29"
          },
          {
            "label": "replayPrevention",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "CrossChainControl",
            "src": "contracts/CrossChainControl.sol:33"
          },
          {
            "label": "myBcId",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "CrossChainControl",
            "src": "contracts/CrossChainControl.sol:36"
          },
          {
            "label": "txIndex",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "CrossChainControl",
            "src": "contracts/CrossChainControl.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICrossChainVerifier)2489": {
            "label": "contract ICrossChainVerifier",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_contract(ICrossChainVerifier)2489)": {
            "label": "mapping(uint256 => contract ICrossChainVerifier)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1161479e60607871b80c85a8e74b25c6dd8d63053d09cf2e7693e33509a5367c": {
      "address": "0xf8b40d92b14c39251d30D319CFDf79759BbadCDF",
      "txHash": "0x1ad2a1074a88f88effe19628de82b5a55436b19a7518a194e28fdd466e9bfc87",
      "layout": {
        "solcVersion": "0.8.8",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "myBcId",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "CrossChainBridgeV2",
            "src": "contracts/CrossChainBridgeV2.sol:40"
          },
          {
            "label": "crossChainControl",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(ICrossChainFunctionCall)5037",
            "contract": "CrossChainBridgeV2",
            "src": "contracts/CrossChainBridgeV2.sol:43"
          },
          {
            "label": "tokenProcessMethods",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_enum(TokenProcessMethod)4240)",
            "contract": "CrossChainBridgeV2",
            "src": "contracts/CrossChainBridgeV2.sol:53"
          },
          {
            "label": "tokenAddressMapping",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "contract": "CrossChainBridgeV2",
            "src": "contracts/CrossChainBridgeV2.sol:60"
          },
          {
            "label": "remoteBridges",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "CrossChainBridgeV2",
            "src": "contracts/CrossChainBridgeV2.sol:63"
          },
          {
            "label": "minimumTransferAmount",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CrossChainBridgeV2",
            "src": "contracts/CrossChainBridgeV2.sol:66"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICrossChainFunctionCall)5037": {
            "label": "contract ICrossChainFunctionCall",
            "numberOfBytes": "20"
          },
          "t_enum(TokenProcessMethod)4240": {
            "label": "enum CrossChainBridgeV2.TokenProcessMethod",
            "members": [
              "NONE",
              "MINTER",
              "MASS_CONSERVATION"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_enum(TokenProcessMethod)4240)": {
            "label": "mapping(address => enum CrossChainBridgeV2.TokenProcessMethod)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "37ab990dea40071bfa7c208b27f9ad101709d26f7f63fa157c20893178a059ac": {
      "address": "0xb5866d51F04afE4643F027ECd198AAA50586AAd8",
      "txHash": "0x9e568e2f0e01d542e342bbf705c2c7168e089fcac2e6967a4bf45c97f0dae86c",
      "layout": {
        "solcVersion": "0.8.8",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_signers",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PrimarySignatureVerifier",
            "src": "contracts/verifiers/PrimarySignatureVerifier.sol:10"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a21b7d9ea5fc56090cbe0306f18f6fc2a42b851582e336925f09fa0101c48f23": {
      "address": "0x4F9361Fd692355EE760FD801204b74C80892B577",
      "txHash": "0x9be91007622055f7bb18aec930c41bff29a93e0c9ee6b3a544bad7ba7943ae9c",
      "layout": {
        "solcVersion": "0.8.8",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "myBcId",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "CrossChainBridgeV2",
            "src": "contracts/CrossChainBridgeV2.sol:40"
          },
          {
            "label": "crossChainControl",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(ICrossChainFunctionCall)5654",
            "contract": "CrossChainBridgeV2",
            "src": "contracts/CrossChainBridgeV2.sol:43"
          },
          {
            "label": "tokenProcessMethods",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_enum(TokenProcessMethod)4851)",
            "contract": "CrossChainBridgeV2",
            "src": "contracts/CrossChainBridgeV2.sol:53"
          },
          {
            "label": "tokenAddressMapping",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "contract": "CrossChainBridgeV2",
            "src": "contracts/CrossChainBridgeV2.sol:60"
          },
          {
            "label": "remoteBridges",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "CrossChainBridgeV2",
            "src": "contracts/CrossChainBridgeV2.sol:63"
          },
          {
            "label": "minimumTransferAmount",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CrossChainBridgeV2",
            "src": "contracts/CrossChainBridgeV2.sol:66"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICrossChainFunctionCall)5654": {
            "label": "contract ICrossChainFunctionCall",
            "numberOfBytes": "20"
          },
          "t_enum(TokenProcessMethod)4851": {
            "label": "enum CrossChainBridgeV2.TokenProcessMethod",
            "members": [
              "NONE",
              "MINTER",
              "MASS_CONSERVATION"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_enum(TokenProcessMethod)4851)": {
            "label": "mapping(address => enum CrossChainBridgeV2.TokenProcessMethod)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8fd8d7bc464f36c3463b38f48c6111b93ec01f65821229b01a55d1f29ce0c68b": {
      "address": "0xD36692a8bf655433584fF9e0A89Be3576537DD2f",
      "txHash": "0x165b8c7fb353df623d6f5d47de19ed2c435c66d967b2e089cfa5f6ae317dc5cd",
      "layout": {
        "solcVersion": "0.8.8",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_signers",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "PrimarySignatureVerifier",
            "src": "contracts/verifiers/PrimarySignatureVerifier.sol:13"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e1584c4703a416d780df08dc6ef6785ef82e3beb5f938a4b38ea1d3f3ca6dcbf": {
      "address": "0xecBCFF6F0B8651145375B017093c1D8094B81A9A",
      "txHash": "0x551d054ce07428fa02125b976fc265939fe2c03cea9abbe227e251e0bcd22423",
      "layout": {
        "solcVersion": "0.8.8",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a396b45fbde369cd747e0291b70f2170e966fefa8ea12ae922679af46d029a01": {
      "address": "0x9c17dcF429d975856F8f2AedA751bd09A44e1aC5",
      "txHash": "0x84c860a17e3f0d9aac2c3cd8033849866fd8b43593d6ef3ebd35ca0e6c81f8dc",
      "layout": {
        "solcVersion": "0.8.8",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "feeTracker",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "FeeCollector",
            "src": "contracts/common/FeeCollector.sol:15"
          },
          {
            "label": "defaultFeePercentage",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "FeeCollector",
            "src": "contracts/common/FeeCollector.sol:16"
          },
          {
            "label": "defaultFeeFlatAmount",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "FeeCollector",
            "src": "contracts/common/FeeCollector.sol:17"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "FeeCollector",
            "src": "contracts/common/FeeCollector.sol:22"
          },
          {
            "label": "tokenCollectFeeMethod",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_enum(CollectFeeMethod)6017)",
            "contract": "FeeCollector",
            "src": "contracts/common/FeeCollector.sol:27"
          },
          {
            "label": "myBcId",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "CrossChainBridgeV2",
            "src": "contracts/CrossChainBridgeV2.sol:50"
          },
          {
            "label": "crossChainControl",
            "offset": 0,
            "slot": "257",
            "type": "t_contract(ICrossChainFunctionCall)6271",
            "contract": "CrossChainBridgeV2",
            "src": "contracts/CrossChainBridgeV2.sol:53"
          },
          {
            "label": "remoteBridges",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "CrossChainBridgeV2",
            "src": "contracts/CrossChainBridgeV2.sol:56"
          },
          {
            "label": "tokenProcessMethods",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_enum(TokenProcessMethod)5108)",
            "contract": "CrossChainBridgeV2",
            "src": "contracts/CrossChainBridgeV2.sol:70"
          },
          {
            "label": "tokenAddressMapping",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "contract": "CrossChainBridgeV2",
            "src": "contracts/CrossChainBridgeV2.sol:77"
          },
          {
            "label": "tokenMinimumTransferAmount",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CrossChainBridgeV2",
            "src": "contracts/CrossChainBridgeV2.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICrossChainFunctionCall)6271": {
            "label": "contract ICrossChainFunctionCall",
            "numberOfBytes": "20"
          },
          "t_enum(CollectFeeMethod)6017": {
            "label": "enum FeeCollector.CollectFeeMethod",
            "members": [
              "NONE",
              "FLAT",
              "PERCENTAGE",
              "RFI_N_FLAT",
              "RFI_N_PERCENTAGE"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TokenProcessMethod)5108": {
            "label": "enum CrossChainBridgeV2.TokenProcessMethod",
            "members": [
              "NONE",
              "MINTER",
              "MASS_CONSERVATION"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_enum(CollectFeeMethod)6017)": {
            "label": "mapping(address => enum FeeCollector.CollectFeeMethod)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_enum(TokenProcessMethod)5108)": {
            "label": "mapping(address => enum CrossChainBridgeV2.TokenProcessMethod)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "df01d201de783eb0bc06c09cd4c5d80d97456236580a0b6940f722a496e97175": {
      "address": "0x0B72b3067aB6A4F897c327dd81874f7CdC4819Ad",
      "txHash": "0x00f8d5dd03ea755b78839481af0fa643269d543949c3c2faffb58024ec33b3a6",
      "layout": {
        "solcVersion": "0.8.8",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_decimal",
            "offset": 0,
            "slot": "151",
            "type": "t_uint8",
            "contract": "MockToken",
            "src": "contracts/test/mock/MockToken.sol:9"
          },
          {
            "label": "_isRFI",
            "offset": 1,
            "slot": "151",
            "type": "t_bool",
            "contract": "MockToken",
            "src": "contracts/test/mock/MockToken.sol:10"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d3d5d34911c976c310c880ba7cca6c360c0703c4cfc04339376069e3aadf4bb2": {
      "address": "0x2d924a73442EC0DD3683f70bA80509e96a9eF2b6",
      "txHash": "0x37a85417d865a7da9b4d7c5f09a9437679f029c17b82bce2c72a4b3c5d78d426",
      "layout": {
        "solcVersion": "0.8.8",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_decimal",
            "offset": 0,
            "slot": "151",
            "type": "t_uint8",
            "contract": "MockToken",
            "src": "contracts/test/mock/MockToken.sol:9"
          },
          {
            "label": "isRFI",
            "offset": 1,
            "slot": "151",
            "type": "t_bool",
            "contract": "MockToken",
            "src": "contracts/test/mock/MockToken.sol:11"
          },
          {
            "label": "minter",
            "offset": 2,
            "slot": "151",
            "type": "t_address",
            "contract": "MockToken",
            "src": "contracts/test/mock/MockToken.sol:12"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "dcffd8e8659c66873abac705502d2ed639959cda98c107ad80b23aa95ec0b8c7": {
      "address": "0xB921175E38bE04cAc2885ccD1f2c0D338CB9e2c5",
      "txHash": "0xb91bb86adfbe6933a23756d85f0d90acbfbc911c373eb69dd7305c96398edc59",
      "layout": {
        "solcVersion": "0.8.8",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "101",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "feeTracker",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "FeeCollector",
            "src": "contracts/common/FeeCollector.sol:15"
          },
          {
            "label": "defaultFeePercentage",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "FeeCollector",
            "src": "contracts/common/FeeCollector.sol:16"
          },
          {
            "label": "defaultFeeFlatAmount",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "FeeCollector",
            "src": "contracts/common/FeeCollector.sol:17"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "FeeCollector",
            "src": "contracts/common/FeeCollector.sol:22"
          },
          {
            "label": "tokenCollectFeeMethod",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_enum(CollectFeeMethod)6009)",
            "contract": "FeeCollector",
            "src": "contracts/common/FeeCollector.sol:27"
          },
          {
            "label": "myBcId",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "CrossChainBridgeV2",
            "src": "contracts/CrossChainBridgeV2.sol:50"
          },
          {
            "label": "crossChainControl",
            "offset": 0,
            "slot": "257",
            "type": "t_contract(ICrossChainFunctionCall)6263",
            "contract": "CrossChainBridgeV2",
            "src": "contracts/CrossChainBridgeV2.sol:53"
          },
          {
            "label": "remoteBridges",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "CrossChainBridgeV2",
            "src": "contracts/CrossChainBridgeV2.sol:56"
          },
          {
            "label": "tokenProcessMethods",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_enum(TokenProcessMethod)5108)",
            "contract": "CrossChainBridgeV2",
            "src": "contracts/CrossChainBridgeV2.sol:70"
          },
          {
            "label": "tokenAddressMapping",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "contract": "CrossChainBridgeV2",
            "src": "contracts/CrossChainBridgeV2.sol:77"
          },
          {
            "label": "tokenMinimumTransferAmount",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "CrossChainBridgeV2",
            "src": "contracts/CrossChainBridgeV2.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICrossChainFunctionCall)6263": {
            "label": "contract ICrossChainFunctionCall",
            "numberOfBytes": "20"
          },
          "t_enum(CollectFeeMethod)6009": {
            "label": "enum FeeCollector.CollectFeeMethod",
            "members": [
              "NONE",
              "FLAT",
              "PERCENTAGE",
              "RFI_N_FLAT",
              "RFI_N_PERCENTAGE"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(TokenProcessMethod)5108": {
            "label": "enum CrossChainBridgeV2.TokenProcessMethod",
            "members": [
              "NONE",
              "MINTER",
              "MASS_CONSERVATION"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_enum(CollectFeeMethod)6009)": {
            "label": "mapping(address => enum FeeCollector.CollectFeeMethod)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_enum(TokenProcessMethod)5108)": {
            "label": "mapping(address => enum CrossChainBridgeV2.TokenProcessMethod)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
